name: Infrastructure Deployment

on:
    push:
        branches: ["main"]
        paths:
            - 'infrastructure/**'
    workflow_dispatch:

env:
    location: eastus
    appName: familywebsite
    environ: dev
    domainName: 'thehodgesfamily.net'
    indexDocument: 'index.html'
    errorDocument404Path: 'error.html'
    funcAppName: 'VisitApp'
    tableName: 'VisitCount'
    containerName: 'Visits'
    

jobs:
    create-rg:
        runs-on: ubuntu-latest
        outputs:
            rgName: ${{ steps.rg.outputs.rgName }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log in with Azure
              uses: azure/login@v2
              with:
                creds: '${{ secrets.AZURE_CREDENTIALS }}'
                
            - name: Create rg
              id: rg
              uses: azure/arm-deploy@v2
              with:
                 scope: subscription
                 subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                 region: ${{ env.location }}
                 template: ./infrastructure/create_rg.json
                 parameters: appName=${{env.appName}} environment=${{env.environ}} location=${{env.location}}

    create-storage:
        runs-on: ubuntu-latest
        needs: create-rg
        outputs:
            storageName: ${{steps.storage.outputs.storageName}}
            storageWebEndpoint: ${{steps.storage.outputs.storageWebEndpoint}}
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in with Azure
          uses: azure/login@v2
          with:
             creds: '${{secrets.AZURE_CREDENTIALS}}'

        - name: Create Storage
          uses: azure/arm-deploy@v2
          id: storage
          with:
            scope: resourcegroup
            resourceGroupName: ${{ needs.create-rg.outputs.rgName }}
            template: ./infrastructure/create_storage.json
            parameters: appName=${{env.appName}} environment=${{env.environ}}

    create-db:
        runs-on: ubuntu-latest
        outputs:
          dbName: ${{steps.db.outputs.dbName}}
          docEndpoint: ${{steps.db.outputs.endpoint}}
        needs: create-rg
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in with Azure
          uses: azure/login@v2
          with:
            creds: ${{secrets.AZURE_CREDENTIALS}}
            enable-AzPSSession: true

        - name: Create DB
          uses: azure/arm-deploy@v2
          id: db
          with:
            scope: resourcegroup
            resourceGroupName: ${{needs.create-rg.outputs.rgName}}
            template: ./infrastructure/create_db.json
            parameters: appName=${{env.appName}} environment=${{env.environ}} tableName=${{env.tableName}} containerName=${{env.containerName}}

    create-app:
      runs-on: ubuntu-latest
      needs: [create-rg,create-storage,create-db]
      outputs:
        appName: ${{steps.ASP.outputs.appName}}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Login with Azure
          uses: azure/login@v2
          with:
            creds: ${{secrets.AZURE_CREDENTIALS}}

        - name: Create App
          uses: azure/arm-deploy@v2
          id: ASP
          with:
            scope: resourcegroup
            resourceGroupName: ${{needs.create-rg.outputs.rgName}}
            template: ./infrastructure/create_app.json
            parameters: environment=${{env.environ}} storageName=${{needs.create-storage.outputs.storageName}} endpoint=${{needs.create-db.outputs.docEndpoint}} serviceplanName=${{env.funcAppName}}

    create-cdn:
        runs-on: ubuntu-latest
        needs: [create-rg,create-storage]
        outputs:
            profileName: ${{steps.cdn.outputs.profileName}}
            customDomainName: ${{steps.cdn.outputs.customDomainName}}
            endpointName: ${{steps.cdn.outputs.endpointName}}
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in with Azure
          uses: azure/login@v2
          with:
            creds: '${{secrets.AZURE_CREDENTIALS}}'

        - name: Create CDN
          uses: azure/arm-deploy@v2
          id: cdn
          with:
            scope: resourcegroup
            resourceGroupName: ${{needs.create-rg.outputs.rgName}}
            template: ./infrastructure/create_cdn.json
            parameters: appName=${{env.appName}} environment=${{env.environ}} domainName=${{env.domainName}} storageWebEndpoint=${{needs.create-storage.outputs.storageWebEndpoint}}

    deploy-dns:
        runs-on: ubuntu-latest
        needs: [create-rg,create-cdn]
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in with Azure
          uses: azure/login@v2
          with:
            creds: ${{secrets.AZURE_CREDENTIALS}}
            enable-AzPSSession: true

        - name: Deploy DNS
          uses: azure/powershell@v2
          id: dns
          with:
            inlineScript: |
                $ErrorActionPreference = 'Stop'
                Set-AzContext -Subscription "2f9cc458-4951-43a4-8231-a7b3c75b5473"
                $rs = Get-AzDnsRecordSet -Name ${{env.environ}} -RecordType CNAME -ZoneName ${{env.domainName}} -ResourceGroupName "core_services"
                Remove-AzDnsRecordConfig -RecordSet $rs -Cname $rs.Records.cname | Set-AzDnsRecordSet
                $newcname = '${{needs.create-cdn.outputs.endpointName}}'
                Get-AzDnsRecordSet -name ${{env.environ}} -RecordType CNAME -ZoneName ${{env.domainName}} -ResourceGroupName "core_services" | Add-AzDnsRecordConfig -Cname $newcname | Set-AzDnsRecordSet
            azPSVersion: "latest"

    create-customdomain:
        runs-on: ubuntu-latest
        needs: [create-rg,create-cdn,deploy-dns]
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in with Azure
          uses: azure/login@v2
          with:
            creds: ${{secrets.AZURE_CREDENTIALS}}

        - name: Create Custom Domain
          uses: azure/arm-deploy@v2
          id: cdom
          with:
            scope: resourcegroup
            resourceGroupName: ${{needs.create-rg.outputs.rgName}}
            template: ./infrastructure/create_customdomain.json
            parameters: profileName=${{needs.create-cdn.outputs.profileName}} appName=${{env.appName}} customHostName=${{needs.create-cdn.outputs.customDomainName}}

    enable-staticweb:
        runs-on: ubuntu-latest
        needs: [create-rg,create-storage,create-cdn,create-customdomain]
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Log in with Azure
          uses: azure/login@v2
          with:
            creds: ${{secrets.AZURE_CREDENTIALS}}
            enable-AzPSSession: true

        - name: Enable Static Web
          uses: azure/powershell@v2
          with:
            inlineScript: |
                $ErrorActionPreference = 'Stop'
                $storageAccount = Get-AzStorageAccount -ResourceGroupName ${{needs.create-rg.outputs.rgName}} -AccountName ${{needs.create-storage.outputs.storageName}}
                $ctx = $storageAccount.Context
                Enable-AzStorageStaticWebsite -Context $ctx -IndexDocument $env:indexDocument -ErrorDocument404Path $env:errorDocument404Path
                $customDomainHttpsParameter = New-AzCdnManagedHttpsParametersObject -CertificateSourceParameterCertificateType Dedicated -CertificateSource Cdn -ProtocolType ServerNameIndication
                Enable-AzCdnCustomDomainCustomHttps -ResourceGroupName ${{needs.create-rg.outputs.rgName}} -ProfileName ${{needs.create-cdn.outputs.profileName}} -EndpointName ${{env.appName}} -CustomDomainName ${{needs.create-cdn.outputs.customDomainName}} -CustomDomainHttpsParameter $customDomainHttpsParameter
            azPSVersion: "latest"

    output-vars:
      runs-on: ubuntu-latest
      needs: [create-rg,create-db,create-cdn,create-app]
      steps:
        
        - uses: azure/login@v2
          with:
            creds: ${{secrets.AZURE_CREDENTIALS}}
            enable-AzPSSession: true

        
        - uses: azure/cli@v2
          id: pprof2
          with:
            azcliversion: latest
            inlineScript: |
              az functionapp deployment list-publishing-profiles --name ${{needs.create-app.outputs.appName}} --resource-group ${{needs.create-rg.outputs.rgName}}


        